# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1.30.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from fission_client.models.io_fission_v1_http_trigger import IoFissionV1HTTPTrigger

class TestIoFissionV1HTTPTrigger(unittest.TestCase):
    """IoFissionV1HTTPTrigger unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoFissionV1HTTPTrigger:
        """Test IoFissionV1HTTPTrigger
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoFissionV1HTTPTrigger`
        """
        model = IoFissionV1HTTPTrigger()
        if include_optional:
            return IoFissionV1HTTPTrigger(
                api_version = '',
                kind = '',
                metadata = None,
                spec = fission_client.models.io_fission_v1_http_trigger_spec.io_fission_v1_HTTPTrigger_spec(
                    createingress = True, 
                    functionref = fission_client.models.io_fission_v1_http_trigger_spec_functionref.io_fission_v1_HTTPTrigger_spec_functionref(
                        functionweights = fission_client.models.functionweights.functionweights(), 
                        name = '', 
                        type = '', ), 
                    host = '', 
                    ingressconfig = fission_client.models.io_fission_v1_http_trigger_spec_ingressconfig.io_fission_v1_HTTPTrigger_spec_ingressconfig(
                        annotations = fission_client.models.annotations.annotations(), 
                        host = '', 
                        path = '', 
                        tls = '', ), 
                    keep_prefix = True, 
                    method = '', 
                    methods = [
                        ''
                        ], 
                    prefix = '', 
                    relativeurl = '', )
            )
        else:
            return IoFissionV1HTTPTrigger(
                metadata = None,
                spec = fission_client.models.io_fission_v1_http_trigger_spec.io_fission_v1_HTTPTrigger_spec(
                    createingress = True, 
                    functionref = fission_client.models.io_fission_v1_http_trigger_spec_functionref.io_fission_v1_HTTPTrigger_spec_functionref(
                        functionweights = fission_client.models.functionweights.functionweights(), 
                        name = '', 
                        type = '', ), 
                    host = '', 
                    ingressconfig = fission_client.models.io_fission_v1_http_trigger_spec_ingressconfig.io_fission_v1_HTTPTrigger_spec_ingressconfig(
                        annotations = fission_client.models.annotations.annotations(), 
                        host = '', 
                        path = '', 
                        tls = '', ), 
                    keep_prefix = True, 
                    method = '', 
                    methods = [
                        ''
                        ], 
                    prefix = '', 
                    relativeurl = '', ),
        )
        """

    def testIoFissionV1HTTPTrigger(self):
        """Test IoFissionV1HTTPTrigger"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
