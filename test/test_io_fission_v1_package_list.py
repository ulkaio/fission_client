# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1.30.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from fission_client.models.io_fission_v1_package_list import IoFissionV1PackageList

class TestIoFissionV1PackageList(unittest.TestCase):
    """IoFissionV1PackageList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoFissionV1PackageList:
        """Test IoFissionV1PackageList
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoFissionV1PackageList`
        """
        model = IoFissionV1PackageList()
        if include_optional:
            return IoFissionV1PackageList(
                api_version = '',
                items = [
                    fission_client.models.io/fission/v1/package.io.fission.v1.Package(
                        api_version = '', 
                        kind = '', 
                        metadata = None, 
                        spec = fission_client.models.io_fission_v1_package_spec.io_fission_v1_Package_spec(
                            buildcmd = '', 
                            deployment = fission_client.models.io_fission_v1_package_spec_deployment.io_fission_v1_Package_spec_deployment(
                                checksum = fission_client.models.io_fission_v1_package_spec_deployment_checksum.io_fission_v1_Package_spec_deployment_checksum(
                                    sum = '', 
                                    type = '', ), 
                                literal = 'YQ==', 
                                type = '', 
                                url = '', ), 
                            environment = fission_client.models.io_fission_v1_package_spec_environment.io_fission_v1_Package_spec_environment(
                                name = '', 
                                namespace = '', ), 
                            source = fission_client.models.io_fission_v1_package_spec_source.io_fission_v1_Package_spec_source(
                                literal = 'YQ==', 
                                type = '', 
                                url = '', ), ), 
                        status = fission_client.models.io_fission_v1_package_status.io_fission_v1_Package_status(
                            buildlog = '', 
                            buildstatus = '', 
                            last_update_timestamp = fission_client.models.last_update_timestamp.lastUpdateTimestamp(), ), )
                    ],
                kind = '',
                metadata = None
            )
        else:
            return IoFissionV1PackageList(
                items = [
                    fission_client.models.io/fission/v1/package.io.fission.v1.Package(
                        api_version = '', 
                        kind = '', 
                        metadata = None, 
                        spec = fission_client.models.io_fission_v1_package_spec.io_fission_v1_Package_spec(
                            buildcmd = '', 
                            deployment = fission_client.models.io_fission_v1_package_spec_deployment.io_fission_v1_Package_spec_deployment(
                                checksum = fission_client.models.io_fission_v1_package_spec_deployment_checksum.io_fission_v1_Package_spec_deployment_checksum(
                                    sum = '', 
                                    type = '', ), 
                                literal = 'YQ==', 
                                type = '', 
                                url = '', ), 
                            environment = fission_client.models.io_fission_v1_package_spec_environment.io_fission_v1_Package_spec_environment(
                                name = '', 
                                namespace = '', ), 
                            source = fission_client.models.io_fission_v1_package_spec_source.io_fission_v1_Package_spec_source(
                                literal = 'YQ==', 
                                type = '', 
                                url = '', ), ), 
                        status = fission_client.models.io_fission_v1_package_status.io_fission_v1_Package_status(
                            buildlog = '', 
                            buildstatus = '', 
                            last_update_timestamp = fission_client.models.last_update_timestamp.lastUpdateTimestamp(), ), )
                    ],
        )
        """

    def testIoFissionV1PackageList(self):
        """Test IoFissionV1PackageList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
