# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1.30.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from fission_client.models.io_fission_v1_environment_spec_builder_podspec_volumes_inner_ephemeral_volume_claim_template import IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerEphemeralVolumeClaimTemplate

class TestIoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerEphemeralVolumeClaimTemplate(unittest.TestCase):
    """IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerEphemeralVolumeClaimTemplate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerEphemeralVolumeClaimTemplate:
        """Test IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerEphemeralVolumeClaimTemplate
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerEphemeralVolumeClaimTemplate`
        """
        model = IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerEphemeralVolumeClaimTemplate()
        if include_optional:
            return IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerEphemeralVolumeClaimTemplate(
                metadata = fission_client.models.metadata.metadata(),
                spec = fission_client.models.io_fission_v1_environment_spec_builder_podspec_volumes_inner_ephemeral_volume_claim_template_spec.io_fission_v1_Environment_spec_builder_podspec_volumes_inner_ephemeral_volumeClaimTemplate_spec(
                    access_modes = [
                        ''
                        ], 
                    data_source = fission_client.models.io_fission_v1_environment_spec_builder_podspec_volumes_inner_ephemeral_volume_claim_template_spec_data_source.io_fission_v1_Environment_spec_builder_podspec_volumes_inner_ephemeral_volumeClaimTemplate_spec_dataSource(
                        api_group = '', 
                        kind = '', 
                        name = '', ), 
                    data_source_ref = fission_client.models.io_fission_v1_environment_spec_builder_podspec_volumes_inner_ephemeral_volume_claim_template_spec_data_source_ref.io_fission_v1_Environment_spec_builder_podspec_volumes_inner_ephemeral_volumeClaimTemplate_spec_dataSourceRef(
                        api_group = '', 
                        kind = '', 
                        name = '', 
                        namespace = '', ), 
                    resources = fission_client.models.io_fission_v1_environment_spec_builder_podspec_volumes_inner_ephemeral_volume_claim_template_spec_resources.io_fission_v1_Environment_spec_builder_podspec_volumes_inner_ephemeral_volumeClaimTemplate_spec_resources(
                        limits = {
                            'key' : None
                            }, 
                        requests = {
                            'key' : None
                            }, ), 
                    selector = fission_client.models.io_fission_v1_environment_spec_builder_podspec_volumes_inner_ephemeral_volume_claim_template_spec_selector.io_fission_v1_Environment_spec_builder_podspec_volumes_inner_ephemeral_volumeClaimTemplate_spec_selector(
                        match_expressions = [
                            fission_client.models.io_fission_v1_environment_spec_builder_podspec_affinity_pod_affinity_preferred_during_scheduling_ignored_during_execution_inner_pod_affinity_term_label_selector_match_expressions_inner.io_fission_v1_Environment_spec_builder_podspec_affinity_podAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner_podAffinityTerm_labelSelector_matchExpressions_inner(
                                key = '', 
                                operator = '', 
                                values = [
                                    ''
                                    ], )
                            ], 
                        match_labels = {
                            'key' : ''
                            }, ), 
                    storage_class_name = '', 
                    volume_attributes_class_name = '', 
                    volume_mode = '', 
                    volume_name = '', )
            )
        else:
            return IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerEphemeralVolumeClaimTemplate(
                spec = fission_client.models.io_fission_v1_environment_spec_builder_podspec_volumes_inner_ephemeral_volume_claim_template_spec.io_fission_v1_Environment_spec_builder_podspec_volumes_inner_ephemeral_volumeClaimTemplate_spec(
                    access_modes = [
                        ''
                        ], 
                    data_source = fission_client.models.io_fission_v1_environment_spec_builder_podspec_volumes_inner_ephemeral_volume_claim_template_spec_data_source.io_fission_v1_Environment_spec_builder_podspec_volumes_inner_ephemeral_volumeClaimTemplate_spec_dataSource(
                        api_group = '', 
                        kind = '', 
                        name = '', ), 
                    data_source_ref = fission_client.models.io_fission_v1_environment_spec_builder_podspec_volumes_inner_ephemeral_volume_claim_template_spec_data_source_ref.io_fission_v1_Environment_spec_builder_podspec_volumes_inner_ephemeral_volumeClaimTemplate_spec_dataSourceRef(
                        api_group = '', 
                        kind = '', 
                        name = '', 
                        namespace = '', ), 
                    resources = fission_client.models.io_fission_v1_environment_spec_builder_podspec_volumes_inner_ephemeral_volume_claim_template_spec_resources.io_fission_v1_Environment_spec_builder_podspec_volumes_inner_ephemeral_volumeClaimTemplate_spec_resources(
                        limits = {
                            'key' : None
                            }, 
                        requests = {
                            'key' : None
                            }, ), 
                    selector = fission_client.models.io_fission_v1_environment_spec_builder_podspec_volumes_inner_ephemeral_volume_claim_template_spec_selector.io_fission_v1_Environment_spec_builder_podspec_volumes_inner_ephemeral_volumeClaimTemplate_spec_selector(
                        match_expressions = [
                            fission_client.models.io_fission_v1_environment_spec_builder_podspec_affinity_pod_affinity_preferred_during_scheduling_ignored_during_execution_inner_pod_affinity_term_label_selector_match_expressions_inner.io_fission_v1_Environment_spec_builder_podspec_affinity_podAffinity_preferredDuringSchedulingIgnoredDuringExecution_inner_podAffinityTerm_labelSelector_matchExpressions_inner(
                                key = '', 
                                operator = '', 
                                values = [
                                    ''
                                    ], )
                            ], 
                        match_labels = {
                            'key' : ''
                            }, ), 
                    storage_class_name = '', 
                    volume_attributes_class_name = '', 
                    volume_mode = '', 
                    volume_name = '', ),
        )
        """

    def testIoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerEphemeralVolumeClaimTemplate(self):
        """Test IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerEphemeralVolumeClaimTemplate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
