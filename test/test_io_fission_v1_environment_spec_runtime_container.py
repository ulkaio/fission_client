# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1.30.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from fission_client.models.io_fission_v1_environment_spec_runtime_container import IoFissionV1EnvironmentSpecRuntimeContainer

class TestIoFissionV1EnvironmentSpecRuntimeContainer(unittest.TestCase):
    """IoFissionV1EnvironmentSpecRuntimeContainer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoFissionV1EnvironmentSpecRuntimeContainer:
        """Test IoFissionV1EnvironmentSpecRuntimeContainer
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoFissionV1EnvironmentSpecRuntimeContainer`
        """
        model = IoFissionV1EnvironmentSpecRuntimeContainer()
        if include_optional:
            return IoFissionV1EnvironmentSpecRuntimeContainer(
                args = [
                    ''
                    ],
                command = [
                    ''
                    ],
                env = [
                    fission_client.models.io_fission_v1_environment_spec_builder_container_env_inner.io_fission_v1_Environment_spec_builder_container_env_inner(
                        name = '', 
                        value = '', 
                        value_from = fission_client.models.io_fission_v1_environment_spec_builder_container_env_inner_value_from.io_fission_v1_Environment_spec_builder_container_env_inner_valueFrom(
                            config_map_key_ref = fission_client.models.io_fission_v1_environment_spec_builder_container_env_inner_value_from_config_map_key_ref.io_fission_v1_Environment_spec_builder_container_env_inner_valueFrom_configMapKeyRef(
                                key = '', 
                                name = '', 
                                optional = True, ), 
                            field_ref = fission_client.models.io_fission_v1_environment_spec_builder_container_env_inner_value_from_field_ref.io_fission_v1_Environment_spec_builder_container_env_inner_valueFrom_fieldRef(
                                api_version = '', 
                                field_path = '', ), 
                            resource_field_ref = fission_client.models.io_fission_v1_environment_spec_builder_container_env_inner_value_from_resource_field_ref.io_fission_v1_Environment_spec_builder_container_env_inner_valueFrom_resourceFieldRef(
                                container_name = '', 
                                divisor = fission_client.models.divisor.divisor(), 
                                resource = '', ), 
                            secret_key_ref = fission_client.models.io_fission_v1_environment_spec_builder_container_env_inner_value_from_secret_key_ref.io_fission_v1_Environment_spec_builder_container_env_inner_valueFrom_secretKeyRef(
                                key = '', 
                                name = '', 
                                optional = True, ), ), )
                    ],
                env_from = [
                    fission_client.models.io_fission_v1_environment_spec_builder_container_env_from_inner.io_fission_v1_Environment_spec_builder_container_envFrom_inner(
                        config_map_ref = fission_client.models.io_fission_v1_environment_spec_builder_container_env_from_inner_config_map_ref.io_fission_v1_Environment_spec_builder_container_envFrom_inner_configMapRef(
                            name = '', 
                            optional = True, ), 
                        prefix = '', 
                        secret_ref = fission_client.models.io_fission_v1_environment_spec_builder_container_env_from_inner_secret_ref.io_fission_v1_Environment_spec_builder_container_envFrom_inner_secretRef(
                            name = '', 
                            optional = True, ), )
                    ],
                image = '',
                image_pull_policy = '',
                lifecycle = fission_client.models.io_fission_v1_environment_spec_builder_container_lifecycle.io_fission_v1_Environment_spec_builder_container_lifecycle(
                    post_start = fission_client.models.io_fission_v1_environment_spec_builder_container_lifecycle_post_start.io_fission_v1_Environment_spec_builder_container_lifecycle_postStart(
                        exec = fission_client.models.io_fission_v1_environment_spec_builder_container_lifecycle_post_start_exec.io_fission_v1_Environment_spec_builder_container_lifecycle_postStart_exec(
                            command = [
                                ''
                                ], ), 
                        http_get = fission_client.models.io_fission_v1_environment_spec_builder_container_lifecycle_post_start_http_get.io_fission_v1_Environment_spec_builder_container_lifecycle_postStart_httpGet(
                            host = '', 
                            http_headers = [
                                fission_client.models.io_fission_v1_environment_spec_builder_container_lifecycle_post_start_http_get_http_headers_inner.io_fission_v1_Environment_spec_builder_container_lifecycle_postStart_httpGet_httpHeaders_inner(
                                    name = '', 
                                    value = '', )
                                ], 
                            path = '', 
                            port = fission_client.models.port.port(), 
                            scheme = '', ), 
                        sleep = fission_client.models.io_fission_v1_environment_spec_builder_container_lifecycle_post_start_sleep.io_fission_v1_Environment_spec_builder_container_lifecycle_postStart_sleep(
                            seconds = 56, ), 
                        tcp_socket = fission_client.models.io_fission_v1_environment_spec_builder_container_lifecycle_post_start_tcp_socket.io_fission_v1_Environment_spec_builder_container_lifecycle_postStart_tcpSocket(
                            host = '', 
                            port = fission_client.models.port.port(), ), ), 
                    pre_stop = fission_client.models.io_fission_v1_environment_spec_builder_container_lifecycle_pre_stop.io_fission_v1_Environment_spec_builder_container_lifecycle_preStop(), ),
                liveness_probe = fission_client.models.io_fission_v1_environment_spec_builder_container_liveness_probe.io_fission_v1_Environment_spec_builder_container_livenessProbe(
                    exec = fission_client.models.io_fission_v1_environment_spec_builder_container_lifecycle_post_start_exec.io_fission_v1_Environment_spec_builder_container_lifecycle_postStart_exec(
                        command = [
                            ''
                            ], ), 
                    failure_threshold = 56, 
                    grpc = fission_client.models.io_fission_v1_environment_spec_builder_container_liveness_probe_grpc.io_fission_v1_Environment_spec_builder_container_livenessProbe_grpc(
                        port = 56, 
                        service = '', ), 
                    http_get = fission_client.models.io_fission_v1_environment_spec_builder_container_lifecycle_post_start_http_get.io_fission_v1_Environment_spec_builder_container_lifecycle_postStart_httpGet(
                        host = '', 
                        http_headers = [
                            fission_client.models.io_fission_v1_environment_spec_builder_container_lifecycle_post_start_http_get_http_headers_inner.io_fission_v1_Environment_spec_builder_container_lifecycle_postStart_httpGet_httpHeaders_inner(
                                name = '', 
                                value = '', )
                            ], 
                        path = '', 
                        port = fission_client.models.port.port(), 
                        scheme = '', ), 
                    initial_delay_seconds = 56, 
                    period_seconds = 56, 
                    success_threshold = 56, 
                    tcp_socket = fission_client.models.io_fission_v1_environment_spec_builder_container_liveness_probe_tcp_socket.io_fission_v1_Environment_spec_builder_container_livenessProbe_tcpSocket(
                        host = '', 
                        port = fission_client.models.port.port(), ), 
                    termination_grace_period_seconds = 56, 
                    timeout_seconds = 56, ),
                name = '',
                ports = [
                    fission_client.models.io_fission_v1_environment_spec_builder_container_ports_inner.io_fission_v1_Environment_spec_builder_container_ports_inner(
                        container_port = 56, 
                        host_ip = '', 
                        host_port = 56, 
                        name = '', 
                        protocol = '', )
                    ],
                readiness_probe = fission_client.models.io_fission_v1_environment_spec_builder_container_readiness_probe.io_fission_v1_Environment_spec_builder_container_readinessProbe(
                    exec = fission_client.models.io_fission_v1_environment_spec_builder_container_lifecycle_post_start_exec.io_fission_v1_Environment_spec_builder_container_lifecycle_postStart_exec(
                        command = [
                            ''
                            ], ), 
                    failure_threshold = 56, 
                    grpc = fission_client.models.io_fission_v1_environment_spec_builder_container_liveness_probe_grpc.io_fission_v1_Environment_spec_builder_container_livenessProbe_grpc(
                        port = 56, 
                        service = '', ), 
                    http_get = fission_client.models.io_fission_v1_environment_spec_builder_container_lifecycle_post_start_http_get.io_fission_v1_Environment_spec_builder_container_lifecycle_postStart_httpGet(
                        host = '', 
                        http_headers = [
                            fission_client.models.io_fission_v1_environment_spec_builder_container_lifecycle_post_start_http_get_http_headers_inner.io_fission_v1_Environment_spec_builder_container_lifecycle_postStart_httpGet_httpHeaders_inner(
                                name = '', 
                                value = '', )
                            ], 
                        path = '', 
                        port = fission_client.models.port.port(), 
                        scheme = '', ), 
                    initial_delay_seconds = 56, 
                    period_seconds = 56, 
                    success_threshold = 56, 
                    tcp_socket = fission_client.models.io_fission_v1_environment_spec_builder_container_liveness_probe_tcp_socket.io_fission_v1_Environment_spec_builder_container_livenessProbe_tcpSocket(
                        host = '', 
                        port = fission_client.models.port.port(), ), 
                    termination_grace_period_seconds = 56, 
                    timeout_seconds = 56, ),
                resize_policy = [
                    fission_client.models.io_fission_v1_environment_spec_builder_container_resize_policy_inner.io_fission_v1_Environment_spec_builder_container_resizePolicy_inner(
                        resource_name = '', 
                        restart_policy = '', )
                    ],
                resources = fission_client.models.io_fission_v1_environment_spec_builder_container_resources.io_fission_v1_Environment_spec_builder_container_resources(
                    claims = [
                        fission_client.models.io_fission_v1_environment_spec_builder_container_resources_claims_inner.io_fission_v1_Environment_spec_builder_container_resources_claims_inner(
                            name = '', 
                            request = '', )
                        ], 
                    limits = {
                        'key' : None
                        }, 
                    requests = {
                        'key' : None
                        }, ),
                restart_policy = '',
                security_context = fission_client.models.io_fission_v1_environment_spec_builder_container_security_context.io_fission_v1_Environment_spec_builder_container_securityContext(
                    allow_privilege_escalation = True, 
                    app_armor_profile = fission_client.models.io_fission_v1_environment_spec_builder_container_security_context_app_armor_profile.io_fission_v1_Environment_spec_builder_container_securityContext_appArmorProfile(
                        localhost_profile = '', 
                        type = '', ), 
                    capabilities = fission_client.models.io_fission_v1_environment_spec_builder_container_security_context_capabilities.io_fission_v1_Environment_spec_builder_container_securityContext_capabilities(
                        add = [
                            ''
                            ], 
                        drop = [
                            ''
                            ], ), 
                    privileged = True, 
                    proc_mount = '', 
                    read_only_root_filesystem = True, 
                    run_as_group = 56, 
                    run_as_non_root = True, 
                    run_as_user = 56, 
                    se_linux_options = fission_client.models.io_fission_v1_environment_spec_builder_container_security_context_se_linux_options.io_fission_v1_Environment_spec_builder_container_securityContext_seLinuxOptions(
                        level = '', 
                        role = '', 
                        type = '', 
                        user = '', ), 
                    seccomp_profile = fission_client.models.io_fission_v1_environment_spec_builder_container_security_context_seccomp_profile.io_fission_v1_Environment_spec_builder_container_securityContext_seccompProfile(
                        localhost_profile = '', 
                        type = '', ), 
                    windows_options = fission_client.models.io_fission_v1_environment_spec_builder_container_security_context_windows_options.io_fission_v1_Environment_spec_builder_container_securityContext_windowsOptions(
                        gmsa_credential_spec = '', 
                        gmsa_credential_spec_name = '', 
                        host_process = True, 
                        run_as_user_name = '', ), ),
                startup_probe = fission_client.models.io_fission_v1_environment_spec_builder_container_startup_probe.io_fission_v1_Environment_spec_builder_container_startupProbe(
                    exec = fission_client.models.io_fission_v1_environment_spec_builder_container_lifecycle_post_start_exec.io_fission_v1_Environment_spec_builder_container_lifecycle_postStart_exec(
                        command = [
                            ''
                            ], ), 
                    failure_threshold = 56, 
                    grpc = fission_client.models.io_fission_v1_environment_spec_builder_container_liveness_probe_grpc.io_fission_v1_Environment_spec_builder_container_livenessProbe_grpc(
                        port = 56, 
                        service = '', ), 
                    http_get = fission_client.models.io_fission_v1_environment_spec_builder_container_lifecycle_post_start_http_get.io_fission_v1_Environment_spec_builder_container_lifecycle_postStart_httpGet(
                        host = '', 
                        http_headers = [
                            fission_client.models.io_fission_v1_environment_spec_builder_container_lifecycle_post_start_http_get_http_headers_inner.io_fission_v1_Environment_spec_builder_container_lifecycle_postStart_httpGet_httpHeaders_inner(
                                name = '', 
                                value = '', )
                            ], 
                        path = '', 
                        port = fission_client.models.port.port(), 
                        scheme = '', ), 
                    initial_delay_seconds = 56, 
                    period_seconds = 56, 
                    success_threshold = 56, 
                    tcp_socket = fission_client.models.io_fission_v1_environment_spec_builder_container_liveness_probe_tcp_socket.io_fission_v1_Environment_spec_builder_container_livenessProbe_tcpSocket(
                        host = '', 
                        port = fission_client.models.port.port(), ), 
                    termination_grace_period_seconds = 56, 
                    timeout_seconds = 56, ),
                stdin = True,
                stdin_once = True,
                termination_message_path = '',
                termination_message_policy = '',
                tty = True,
                volume_devices = [
                    fission_client.models.io_fission_v1_environment_spec_builder_container_volume_devices_inner.io_fission_v1_Environment_spec_builder_container_volumeDevices_inner(
                        device_path = '', 
                        name = '', )
                    ],
                volume_mounts = [
                    fission_client.models.io_fission_v1_environment_spec_builder_container_volume_mounts_inner.io_fission_v1_Environment_spec_builder_container_volumeMounts_inner(
                        mount_path = '', 
                        mount_propagation = '', 
                        name = '', 
                        read_only = True, 
                        recursive_read_only = '', 
                        sub_path = '', 
                        sub_path_expr = '', )
                    ],
                working_dir = ''
            )
        else:
            return IoFissionV1EnvironmentSpecRuntimeContainer(
                name = '',
        )
        """

    def testIoFissionV1EnvironmentSpecRuntimeContainer(self):
        """Test IoFissionV1EnvironmentSpecRuntimeContainer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
