# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1.30.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from fission_client.models.io_fission_v1_package import IoFissionV1Package

class TestIoFissionV1Package(unittest.TestCase):
    """IoFissionV1Package unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoFissionV1Package:
        """Test IoFissionV1Package
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoFissionV1Package`
        """
        model = IoFissionV1Package()
        if include_optional:
            return IoFissionV1Package(
                api_version = '',
                kind = '',
                metadata = None,
                spec = fission_client.models.io_fission_v1_package_spec.io_fission_v1_Package_spec(
                    buildcmd = '', 
                    deployment = fission_client.models.io_fission_v1_package_spec_deployment.io_fission_v1_Package_spec_deployment(
                        checksum = fission_client.models.io_fission_v1_package_spec_deployment_checksum.io_fission_v1_Package_spec_deployment_checksum(
                            sum = '', 
                            type = '', ), 
                        literal = 'YQ==', 
                        type = '', 
                        url = '', ), 
                    environment = fission_client.models.io_fission_v1_package_spec_environment.io_fission_v1_Package_spec_environment(
                        name = '', 
                        namespace = '', ), 
                    source = fission_client.models.io_fission_v1_package_spec_source.io_fission_v1_Package_spec_source(
                        literal = 'YQ==', 
                        type = '', 
                        url = '', ), ),
                status = fission_client.models.io_fission_v1_package_status.io_fission_v1_Package_status(
                    buildlog = '', 
                    buildstatus = '', 
                    last_update_timestamp = fission_client.models.last_update_timestamp.lastUpdateTimestamp(), )
            )
        else:
            return IoFissionV1Package(
                metadata = None,
                spec = fission_client.models.io_fission_v1_package_spec.io_fission_v1_Package_spec(
                    buildcmd = '', 
                    deployment = fission_client.models.io_fission_v1_package_spec_deployment.io_fission_v1_Package_spec_deployment(
                        checksum = fission_client.models.io_fission_v1_package_spec_deployment_checksum.io_fission_v1_Package_spec_deployment_checksum(
                            sum = '', 
                            type = '', ), 
                        literal = 'YQ==', 
                        type = '', 
                        url = '', ), 
                    environment = fission_client.models.io_fission_v1_package_spec_environment.io_fission_v1_Package_spec_environment(
                        name = '', 
                        namespace = '', ), 
                    source = fission_client.models.io_fission_v1_package_spec_source.io_fission_v1_Package_spec_source(
                        literal = 'YQ==', 
                        type = '', 
                        url = '', ), ),
        )
        """

    def testIoFissionV1Package(self):
        """Test IoFissionV1Package"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
