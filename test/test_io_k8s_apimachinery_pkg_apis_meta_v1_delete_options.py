# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1.30.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from fission_client.models.io_k8s_apimachinery_pkg_apis_meta_v1_delete_options import IoK8sApimachineryPkgApisMetaV1DeleteOptions

class TestIoK8sApimachineryPkgApisMetaV1DeleteOptions(unittest.TestCase):
    """IoK8sApimachineryPkgApisMetaV1DeleteOptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoK8sApimachineryPkgApisMetaV1DeleteOptions:
        """Test IoK8sApimachineryPkgApisMetaV1DeleteOptions
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoK8sApimachineryPkgApisMetaV1DeleteOptions`
        """
        model = IoK8sApimachineryPkgApisMetaV1DeleteOptions()
        if include_optional:
            return IoK8sApimachineryPkgApisMetaV1DeleteOptions(
                api_version = '',
                dry_run = [
                    ''
                    ],
                grace_period_seconds = 56,
                kind = '',
                orphan_dependents = True,
                preconditions = fission_client.models.io/k8s/apimachinery/pkg/apis/meta/v1/preconditions.io.k8s.apimachinery.pkg.apis.meta.v1.Preconditions(
                    resource_version = '', 
                    uid = '', ),
                propagation_policy = ''
            )
        else:
            return IoK8sApimachineryPkgApisMetaV1DeleteOptions(
        )
        """

    def testIoK8sApimachineryPkgApisMetaV1DeleteOptions(self):
        """Test IoK8sApimachineryPkgApisMetaV1DeleteOptions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
