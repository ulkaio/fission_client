# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1.30.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Any, ClassVar, Dict, List, Optional
from pydantic import BaseModel
from pydantic import Field
from fission_client.models.io_fission_v1_environment_spec_builder_podspec_volumes_inner_projected_sources_inner_cluster_trust_bundle import IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerProjectedSourcesInnerClusterTrustBundle
from fission_client.models.io_fission_v1_environment_spec_builder_podspec_volumes_inner_projected_sources_inner_config_map import IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerProjectedSourcesInnerConfigMap
from fission_client.models.io_fission_v1_environment_spec_builder_podspec_volumes_inner_projected_sources_inner_downward_api import IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerProjectedSourcesInnerDownwardAPI
from fission_client.models.io_fission_v1_environment_spec_builder_podspec_volumes_inner_projected_sources_inner_secret import IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerProjectedSourcesInnerSecret
from fission_client.models.io_fission_v1_environment_spec_builder_podspec_volumes_inner_projected_sources_inner_service_account_token import IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerProjectedSourcesInnerServiceAccountToken
try:
    from typing import Self
except ImportError:
    from typing_extensions import Self

class IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerProjectedSourcesInner(BaseModel):
    """
    Projection that may be projected along with other supported volume types. Exactly one of these fields must be set.
    """ # noqa: E501
    cluster_trust_bundle: Optional[IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerProjectedSourcesInnerClusterTrustBundle] = Field(default=None, alias="clusterTrustBundle")
    config_map: Optional[IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerProjectedSourcesInnerConfigMap] = Field(default=None, alias="configMap")
    downward_api: Optional[IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerProjectedSourcesInnerDownwardAPI] = Field(default=None, alias="downwardAPI")
    secret: Optional[IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerProjectedSourcesInnerSecret] = None
    service_account_token: Optional[IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerProjectedSourcesInnerServiceAccountToken] = Field(default=None, alias="serviceAccountToken")
    __properties: ClassVar[List[str]] = ["clusterTrustBundle", "configMap", "downwardAPI", "secret", "serviceAccountToken"]

    model_config = {
        "populate_by_name": True,
        "validate_assignment": True,
        "protected_namespaces": (),
    }


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerProjectedSourcesInner from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        _dict = self.model_dump(
            by_alias=True,
            exclude={
            },
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of cluster_trust_bundle
        if self.cluster_trust_bundle:
            _dict['clusterTrustBundle'] = self.cluster_trust_bundle.to_dict()
        # override the default output from pydantic by calling `to_dict()` of config_map
        if self.config_map:
            _dict['configMap'] = self.config_map.to_dict()
        # override the default output from pydantic by calling `to_dict()` of downward_api
        if self.downward_api:
            _dict['downwardAPI'] = self.downward_api.to_dict()
        # override the default output from pydantic by calling `to_dict()` of secret
        if self.secret:
            _dict['secret'] = self.secret.to_dict()
        # override the default output from pydantic by calling `to_dict()` of service_account_token
        if self.service_account_token:
            _dict['serviceAccountToken'] = self.service_account_token.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Dict) -> Self:
        """Create an instance of IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerProjectedSourcesInner from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "clusterTrustBundle": IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerProjectedSourcesInnerClusterTrustBundle.from_dict(obj.get("clusterTrustBundle")) if obj.get("clusterTrustBundle") is not None else None,
            "configMap": IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerProjectedSourcesInnerConfigMap.from_dict(obj.get("configMap")) if obj.get("configMap") is not None else None,
            "downwardAPI": IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerProjectedSourcesInnerDownwardAPI.from_dict(obj.get("downwardAPI")) if obj.get("downwardAPI") is not None else None,
            "secret": IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerProjectedSourcesInnerSecret.from_dict(obj.get("secret")) if obj.get("secret") is not None else None,
            "serviceAccountToken": IoFissionV1EnvironmentSpecBuilderPodspecVolumesInnerProjectedSourcesInnerServiceAccountToken.from_dict(obj.get("serviceAccountToken")) if obj.get("serviceAccountToken") is not None else None
        })
        return _obj


